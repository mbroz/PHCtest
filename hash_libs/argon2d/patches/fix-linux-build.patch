Fix build on Linux.
---
 ref/argon2d-ref.cpp |   10 +++++-----
 ref/argon2d.h       |    6 +++---
 ref/genkat.cpp      |    2 +-
 3 files changed, 9 insertions(+), 9 deletions(-)

Index: argon2d/ref/argon2d-ref.cpp
===================================================================
--- argon2d.orig/ref/argon2d-ref.cpp	2015-02-01 00:36:20.000000000 +0100
+++ argon2d/ref/argon2d-ref.cpp	2015-03-15 09:15:03.525071748 +0100
@@ -10,7 +10,7 @@
 #include <stdint.h>
 #include <time.h> 
 
-#include <string>
+#include <string.h>
 #include <vector>
 #include <thread>
 using namespace std;
@@ -249,7 +249,7 @@ int Argon2dRef(uint8_t *out, uint32_t ou
 		blockcounter.v[0] = 1;
 		MakeBlock(&blockhash, &blockcounter, &(state[BLOCK(l, 0, 1)]));
 	}
-	memset(blockhash.v, 0, 64 * sizeof(__m128i));
+	memset(blockhash.v, 0, 64 * 16 /*sizeof(__m128i)*/);
 	//Creating other blocks
 	for (uint8_t r = 0; r < t_cost; ++r)
 	{
@@ -302,8 +302,8 @@ int Argon2dRef(uint8_t *out, uint32_t ou
 	return 0;
 }
 
-int PHS(void *out, size_t outlen, const void *in, size_t inlen, const void *salt, uint32_t  saltlen,
-	uint32_t t_cost, uint32_t m_cost)
+int PHS(void *out, size_t outlen, const void *in, size_t inlen, const void *salt, size_t saltlen,
+	unsigned int t_cost, unsigned int m_cost)
 {
-	return Argon2dRef((uint8_t*)out, outlen, (const uint8_t*)in, inlen, (const uint8_t*)salt, saltlen, NULL, 0, NULL, 0, t_cost, m_cost, 1);
+	return Argon2dRef((uint8_t*)out, (uint32_t)outlen, (const uint8_t*)in, (uint32_t)inlen, (const uint8_t*)salt, (uint32_t)saltlen, NULL, 0, NULL, 0, (uint32_t)t_cost, (uint32_t)m_cost, 1);
 }
Index: argon2d/ref/argon2d.h
===================================================================
--- argon2d.orig/ref/argon2d.h	2015-02-01 00:43:07.000000000 +0100
+++ argon2d/ref/argon2d.h	2015-03-15 09:13:29.844102164 +0100
@@ -32,11 +32,11 @@ struct block{
 	block(){ memset(v, 0, BYTES_IN_BLOCK); }
 	uint64_t& operator[](uint8_t i){ return *(uint64_t*)(v + 8 * i); }
 	block& operator=(const block& r){ memcpy(v, r.v, BYTES_IN_BLOCK); return *this; }
-	block& operator^(const block& r){ block a; for (unsigned j = 0; j < BYTES_IN_BLOCK; ++j) a.v[j] = v[j] ^ r.v[j]; return a; }
+	block& operator^(const block& r){ static block a; for (unsigned j = 0; j < BYTES_IN_BLOCK; ++j) a.v[j] = v[j] ^ r.v[j]; return a; }
 };
 
-extern int PHS(void *out, size_t outlen, const void *in, size_t inlen, const void *salt, uint32_t  saltlen,
-	uint32_t t_cost, uint32_t m_cost);
+extern "C" int PHS(void *out, size_t outlen, const void *in, size_t inlen, const void *salt, size_t saltlen,
+	unsigned int t_cost, unsigned int m_cost);
 
 extern int Argon2dRef(uint8_t *out, uint32_t outlen, const uint8_t *msg, uint32_t msglen, const uint8_t *nonce, uint32_t noncelen, const uint8_t *secret,
 	uint8_t secretlen, const uint8_t *ad, uint32_t adlen, uint32_t t_cost, uint32_t m_cost, uint8_t lanes);
Index: argon2d/ref/genkat.cpp
===================================================================
--- argon2d.orig/ref/genkat.cpp	2015-01-31 23:51:38.000000000 +0100
+++ argon2d/ref/genkat.cpp	2015-02-28 19:48:57.000000000 +0100
@@ -11,7 +11,7 @@ using namespace std;
 
 #include "argon2d.h"
 #include "blake2.h"
-#define _MEASURE
+//#define _MEASURE
 
 void GenKat()
 {
